# 异常处理
# 希望让程序正常的执行，遇到了异常也不停止。

num_1 = 100

# 使用try/expect 捕获异常信息并处理
# 如果try代码块出现了异常，就会执行except代码块的语句

# try:            # 可能会发生错误的语句
#     print(num_1)
#     print(num_2)
#     print(num_1)

# except:         # 发生错误后执行的语句
#     print("程序有问题")

#     如果没有异常就会执行，有异常就不执行
# else:
#     print("没有异常")
#
# finally:
#     print("我一定会执行")


# 数据库(关系型数据库 （mysql）,菲关系型数据库（redis）)
# 存数据的仓库

# 转账
# 转账成功需要几个操作步骤
# 我们把这几个步骤可以称之为一个事务
# 事务特点：要么都成功，要么都失败
# 如果事务中的一个环节出现了问题(异常)，那就执行回滚操作

# 如果在执行这个事务的过程中，出现了异常，怎么办？

# 回滚

# 怀志华：1000 - 100 = 900
# Rong:500 + 100 = 600

# try:
#     转账第一步
#     转账第二步
#     转账第三步
# except:
#     回滚
#

# 打开文件的操作
# 对文件进行读写
# 如果是一个编码正常的文件，那一般不会有啥问题
# 如果是一个乱码的文件，就无法进行读取，导致程序运行异常

# try:
#     写有可能报错的代码
#     爬虫代码
#     解析数据(提出数据)
#     可能会报错
#
# except:         # 但是我不希望我的爬虫程序终结
#     如果出现异常，将要执行的代码
