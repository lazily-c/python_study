# 重键盘获取用户输入的信息

# 程序
# 进程(正在运行的程序)
# 进程的状态(等待、执行、阻塞)

# 时间片轮转法

# 阻塞：程序停止执行，直到某个特定的条件触发，才继续执行

# input输入的数据，都被当作字符串（str）类型
num = input("请输入你要输入的信息：")

# 打印输入信息的类型
print(type(num))

# 进行计算，由于num是str类型，要对num进行强制换
# 注意：所有的数值型都可以转成str型，但不是所有的str型都可以转换成数值型

value_1 = int(num) - 50

# 打印输出计算结果
print(value_1)

# type() 查看数据类型

# 数据类型的转换方法：
# int(x)            将x转化为整数
# float(x)          将x转化为浮点数
# str(x)**          将x转化为字符串
# eval(str)         将字符串中的数据转换成Python表达式原本类型
# tuple(s)          将序列 s 转换为⼀个元组
# list(s)           将序列 s 转换为⼀个列表


# 数据类型转化的例子：

# 1、元组转化为列表
tu = (1, 2, 4)
print(list(tu))       # 转化为列表

# 2、列表转化成元组
li = [1, 2, 4]
print(tuple(li))      # 转化为元组

# 3、整数转化成浮点数
a = 1
print(float(a))       # 转化为浮点数

# 4、整数转化为字符串
b = 10
print(str(b))         # 转化为字符串

# 5、eval的使用，输入什么数据类型，就会转化成什么数据类型
value_2 = eval(input("请输入任意类型的数据："))
print(type(value_2))

# 特别注意：
# 1、长得像整数的字符串可以转化为整数,也可以转化为浮点数
# 2、长得像小数的字符串可以转化为浮点数，不可以直接转化为整数


# 使用场景例子
# 请输入一个列表，并计算这个列表中所有元素的的和
Li = eval(input("请输入一个列表："))
num = 0

# 让列表进行求和操作
for i in Li:
    num += i

# 打印求和的结果
print(num)
